AWSTemplateFormatVersion: '2010-09-09'
Description: An AWS Serverless Specification template describing your function.
Globals:
  Api:
    Cors: '''*'''
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: https://${DevAWSomePhotoApi}.execute-api.${AWS::Region}.amazonaws.com/prod
Parameters:
  DeployBucketName:
    Type: String
  PhotoAppBucketName:
    Type: String
Resources:
  DevAWSomePhotoApi:
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location:
              Fn::Sub: s3://${DeployBucketName}/swagger.yaml
      StageName: prod
    Type: AWS::Serverless::Api
  DevAWSomePhotoList:
    Properties:
      CodeUri: s3://devawsome-deploy-hoshino.tetsuya/66ebcc1261ab09edaf294f583a8e40fe
      Description: ''
      Environment:
        Variables:
          BUCKET_NAME:
            Fn::Sub: ${PhotoAppBucketName}
      Events:
        GetAPI:
          Properties:
            Method: GET
            Path: /photos/{username}
            RestApiId:
              Ref: DevAWSomePhotoApi
          Type: Api
      Handler: js/index.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - DevAWSomePhotoListRole
        - Arn
      Runtime: nodejs6.10
      Timeout: 15
    Type: AWS::Serverless::Function
  DevAWSomePhotoListPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - DevAWSomePhotoList
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*
    Type: AWS::Lambda::Permission
  DevAWSomePhotoListRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action: cloudwatch:*
            Effect: Allow
            Resource: '*'
          - Action: logs:*
            Effect: Allow
            Resource: '*'
          - Action: dynamodb:*
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: dynamodb_access_lambda
    Type: AWS::IAM::Role
Transform: AWS::Serverless-2016-10-31
